<?php namespace App;

use App\Traits\Searchable;
use Carbon\Carbon;
use Jenssegers\Mongodb\Eloquent\Model as Model;
use Jenssegers\Mongodb\Eloquent\HybridRelations;

class Comment extends Model
{
    use Searchable;
    use HybridRelations;
    protected $connection = 'archive';
    protected $collection = 'tweets';
    protected $fillable = [
        'content',
        'user_id',
        'dispatch_id',
        'parent_id',
    ];

    public function save(array $options = [])
    {
        if(!isset($this->id) || is_null($this->id))
        {
            $this->id = Comment::all()->count();
        }

        return parent::save($options); // TODO: Change the autogenerated stub
    }


    public function image()
    {
        return $this->hasOne('\App\Image','id','image_id');
    }
    
    public function post()
    {
        return $this->hasOne('\App\Post','id','post_id');
    }
    public function company()
    {
        return $this->belongsTo('\App\Company','id','company_id');
    }

    public function tweet()
    {
        return $this->hasOne('\App\Tweet','id','tweet_id');
    }
    
    public function dispatch()
    {
        return $this->hasOne('\App\Dispatch','id','dispatch_id');
    }

    public function parent()
    {
        return $this->hasOne('\App\Comment','id','parent_id');
    }

    public function children()
    {
        return $this->hasMany('\App\Comment','parent_id','id');
    }

    public function user()
    {
        return $this->hasOne('\App\User','twitter_id','user_id');
    }
    
}
